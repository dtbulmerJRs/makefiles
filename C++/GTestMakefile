###############################################################################
#                                                                             #
#         General Makefile for C++ Unit Tests using googletest (gtest)        #
#           Copyright (C) 2014 Grant Ayers <ayers@cs.stanford.edu>            #
#           Hosted at GitHub: https://github.com/grantea/makefiles            #
#                                                                             #
# This file is free software distributed under the BSD license. See LICENSE   #
# for more information.                                                       #
#                                                                             #
# This Makefile is a companion to the general-purpose C++ Makefile, and adds  #
# support for unit testing using the googletest (gtest) framework. It is      #
# designed for use with GNU Make and GCC, but may work with other software    #
# with little or no modification.                                             #
#                                                                             #
# Usage:                                                                      #
#  1. Create a test directory in your project root and add this Makefile.     #
#  2. Unpack the gtest framework (e.g. 'gtest-1.7.0') into the same           #
#     directory. See https://code.google.com/p/googletest to download gtest.  #
#  3. Build gtest according to its documentation (for gtest-1.7.0, go         #
#     to gtest-1.7.0/make and type 'make').                                   #
#  4. Set 'SRC_DIRS' to match 'SRC_DIRS' in your main project Makefile.       #
#  5. Set 'MAIN_OBJS' to the name of the object file in your project that has #
#     a main() function (e.g. 'main.o'), if applicable.                       #
#  6. Set 'GTEST_BASE' to the name of the gtest directory.                    #
#  7. Create the same test directories as your main project directory layout, #
#     then add a unit test file for each main project file.                   #
#  8. Adjust any other settings in this Makefile as needed, then run          #
#     'make' and './test'.                                                    #
#                                                                             #
###############################################################################


#---------- Basic settings  ----------#
TARGET     = test
SRC_DIRS   = src src/util
MAIN_OBJS  = main.o
GTEST_BASE = gtest-1.7.0


#---------- Compilation and linking ----------#
CXX        = g++
SRC_SUFFIX = .cc .c
CXX_LANG   = -Wall -Wextra -pedantic -Wfatal-errors -std=c++11
CXX_OPT    = -O3 -march=native -flto -g
INC_DIRS   = -I../src -I$(GTEST_BASE)/include
LINK_FLAGS =


#---------- No need to modify below ----------#
ASDS = $(foreach DIR,$(SRC_DIRS),$(DIR) ../$(DIR))
SRCS = $(foreach EXT,$(SRC_SUFFIX),$(patsubst %,%/*$(EXT),$(ASDS)))
OBJS = $(filter-out %$(MAIN_OBJS), $(foreach EXT,$(SRC_SUFFIX),$(patsubst %$(EXT),%.o,$(filter %$(EXT),$(wildcard $(SRCS))))))
DEPS = $(OBJS:.o=.d)
OPTS = $(CXX_LANG) $(CXX_OPT)

.PHONY: clean all

all: $(TARGET)

$(TARGET) : $(OBJS)
	@echo [LD] $@
	@$(CXX) $(OPTS) $(OBJS) $(GTEST_BASE)/make/gtest_main.a $(LINK_FLAGS) -o $(TARGET)

$(SRC_SUFFIX:=.o) :
	@echo [CC] $@
	@$(CXX) $(OPTS) $(INC_DIRS) -MD -MP -c -o $@ $<

clean:
	rm -f $(OBJS) $(DEPS) $(TARGET)

doit:
	@echo $(FOO)

-include $(DEPS)

